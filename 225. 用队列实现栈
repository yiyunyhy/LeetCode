#1.
class MyStack:

    def __init__(self):
        """
        Initialize your data structure here.
        """
        
        self.queuein = []
        self.queueout = []

    def push(self, x: int) -> None:
        """
        Push element x onto stack.
        """
        self.queuein.append(x)

    def pop(self) -> int:
        """
        Removes the element on top of the stack and returns that element.
        """
        while self.queuein:
            a = self.queuein.pop(0)
            if self.queuein:
                self.queueout.append(a)
            else:
                return a
            
        while self.queueout:
            a = self.queueout.pop(0)
            if self.queueout:
                self.queuein.append(a)
            else:
                return a

    def top(self) -> int:
        """
        Get the top element.
        """
        while self.queuein:
            a = self.queuein.pop(0)
            self.queueout.append(a)
            if not self.queuein:
                return a
            
        while self.queueout:
            a = self.queueout.pop(0)
            self.queuein.append(a)
            if not self.queueout:
                return a

    def empty(self) -> bool:
        """
        Returns whether the stack is empty.
        """
        if not self.queuein and not self.queueout:
            return True
        else:
            return False


# Your MyStack object will be instantiated and called as such:
# obj = MyStack()
# obj.push(x)
# param_2 = obj.pop()
# param_3 = obj.top()
# param_4 = obj.empty()
#2.
