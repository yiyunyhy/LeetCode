#1.
class Solution:
    def intersect(self, nums1: List[int], nums2: List[int]) -> List[int]:
        inter = set(nums1) & set(nums2)
        l = []
        for i in inter:
            l += [i] * min(nums1.count(i), nums2.count(i))
        return l
#2.
class Solution:
    def intersect(self, nums1: List[int], nums2: List[int]) -> List[int]:
        if len(nums1) > len(nums2):
            return self.intersect(nums2, nums1)
        
        lookup = collections.defaultdict(int)
        for i in nums1:
            lookup[i] += 1
            
        result = []
        for i in nums2:
            if lookup[i] > 0:
                result += i,
                lookup[i] -= 1
        return result
#3.
class Solution:
    def intersect(self, nums1: List[int], nums2: List[int]) -> List[int]:
        result = []
        if len(nums1) > len(nums2):
            return self.intersect(nums2,nums1)
        
        for i in nums1:
            if i in nums2:
                result.append(i)
                nums2.pop(nums2.index(i))
        return result
